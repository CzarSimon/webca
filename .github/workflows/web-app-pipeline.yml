name: web-app-pipeline
on:
  push:
    paths:
      - web-app/**
      - .github/workflows/web-app-pipeline.yml

jobs:
  parse-version:
    name: parse-version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.parse.outputs.version }}
      tag-name: ${{ steps.parse.outputs.tag-name }}
      package-name: ${{ steps.parse.outputs.package-name }}
      full-package-name: ${{ steps.parse.outputs.full-package-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: parse
        name: Parse version info
        run: |
          NAME=$(cat package.json | jq .name --raw-output)
          VERSION=$(cat package.json | jq .version --raw-output)
          COMMIT_ID=${GITHUB_SHA:0:7}
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tag-name::$NAME/$VERSION"
          echo "::set-output name=package-name::$NAME:$VERSION"
          echo "::set-output name=full-package-name::$NAME:$VERSION-$COMMIT_ID"
        working-directory: ./web-app

  run-tests:
    name: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.18.0
      - name: Get dependencies
        run: npm install
        working-directory: ./web-app
      - name: Check formating
        run: npm run check-format
        working-directory: ./web-app
      - name: Check linting
        run: npm run check-linting
        working-directory: ./web-app
      - name: Test
        run: npm test
        working-directory: ./web-app

  build-image:
    name: build-image
    needs:
      - parse-version
      - run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Docker build
        run: |
          git pull --no-rebase
          git log -n 3
          is_new_version=$(sh ../scripts/is-new-version.sh .)
          if [[ "$is_new_version" != "true" ]]; then
            echo "Skipping docker build off ${{needs.parse-version.outputs.package-name}}"
            exit 0
          fi

          echo "Package version: ${{needs.parse-version.outputs.full-package-name}}"
          IMAGE_NAME="docker.pkg.github.com/czarsimon/webca/${{needs.parse-version.outputs.package-name}}"
          docker login https://docker.pkg.github.com --username $GITHUB_ACTOR --password ${{ secrets.GITHUB_TOKEN }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
        working-directory: ./web-app
